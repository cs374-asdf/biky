import React, { useRef, useEffect, useState } from 'react';
import { makeStyles } from '@material-ui/core/styles';
import mapboxgl from 'mapbox-gl';

var fullRoute = [ 
  [37.49470666236267, 126.91468074800363], // 0
  [37.49415293252939, 126.91474014452083],
  [37.493646325043095, 126.91481439016731],
  [37.493646325043095, 126.91561624314943],
  [37.493669888258175, 126.91635869961434],
  [37.4943178737601, 126.91641809613154],
  [37.494341436763335, 126.91747238431171],
  
  [37.49436499975911, 126.91845242684539], // 7

  [37.49369345146585, 126.91874940943136], // 8
  [37.493057242249606, 126.91824453903524],
  [37.49250350018724, 126.91779906515627],
  [37.492161827504944, 126.91696751391557],
  [37.49161986073405, 126.91631415222646],
  [37.49088937755974, 126.91609141528697],
  [37.490630172135496, 126.91692296652768],
  [37.49068908253818, 126.91797725470786],
  [37.490594825871604, 126.91943246937909],
  [37.490747992894406, 126.92084313666243],
  [37.49061839003611, 126.92174893382835],
  [37.490465222747545, 126.92268442897412],
  [37.491231056049536, 126.92283292026711],
  [37.49218539117512, 126.9230408080773],
  [37.49303367882794, 126.92327839414607],
  [37.49317505916671, 126.9220459164143],
  [37.4933046575755, 126.92078374042396],
  [37.49359882211928, 126.91981753934691], // 25
]

// var fullRoute = [ 
//   [37.494670391439165, 126.91464380466944],
//   [37.49461632321203, 126.91465594036819],
//   [37.49456003296136, 126.91466527552109], 
//   [37.49451929656926, 126.91467181012814],
//   [37.494469672207074, 126.91468207879632], 
//   [37.494426713777365, 126.91469141394921], 
//   [37.49439116195478, 126.91469701504094],
//   [37.49434894414346, 126.91470635019387],
//   [37.494312592802274, 126.91471474172195],
//   [37.494275203988074, 126.91472033270082],
//   [37.4942308443537, 126.91472672239101],
//   [37.49418585098338, 126.91473710563757],
//   [37.49414212500595, 126.91474828759539],
//   [37.494095230451, 126.91475547599684],
//   [37.49406227749845, 126.91476346311404],
//   [37.49401474918228, 126.91477065151551],
//   [37.49395581402821, 126.91478023605076],
//   [37.493894977691355, 126.91479141800859],
//   [37.49384111213756, 126.91480898966068],
//   [37.49378281055953, 126.91482256775232],
//   [37.493727043790116, 126.91482895744248],
//   [37.49366557355288, 126.91483295099884],
//   [37.49366557355288, 126.91492400408393],
//   [37.49366430612423, 126.91497911518655],
//   [37.49365987012572, 126.91505659018],
//   [37.49365733526928, 126.9151500393989],
//   [37.49365480041277, 126.91524029377271],
//   [37.493652265556186, 126.91531297649854],
//   [37.49365099812784, 126.91537367858254],
//   [37.49364846327113, 126.91544556259707],
//   [37.49364846327113, 126.9155206414567],
//   [37.49364402727167, 126.91560530485161],
//   [37.49364339355742, 126.91568357855633],
//   [37.49364402727167, 126.91576025483852],
//   [37.493642759843375, 126.9158153659569],
//   [37.49364149241491, 126.91589523708416],
//   [37.493639591272135, 126.91597830305653],
//   [37.49363705641501, 126.91606216774017],
//   [37.49363262041484, 126.91614443500124],
//   [37.49363262041474, 126.91621392290502],
//   [37.49363071927174, 126.91630337856756],
//   [37.49364719584283, 126.91636248320174],
//   [37.49370423009929, 126.91635369737773],
//   [37.49375682831944, 126.916354496089],
//   [37.49381703105605, 126.91635529480028],
//   [37.4938683617721, 126.91636328191301],
//   [37.49392476215607, 126.91636647676283],
//   [37.493979895066445, 126.91636967160792],
//   [37.49404389988837, 126.91637286645302],
//   [37.49410853836574, 126.91637366516429],
//   [37.4941738104969, 126.91637765872065],
//   [37.49424161740768, 126.91637845743193],
//   [37.49431322537524, 126.91638864486173],
//   [37.49432845700756, 126.91646019951277],
//   [37.494329841700974, 126.91655269697881],
//   [37.49433122639439, 126.91665043015048],
//   [37.49433122639505, 126.9167411824009],
//   [37.49433122639505, 126.91683804295496],
//   [37.494332611088865, 126.91693228568258],
//   [37.49433191874221, 126.91702914623667],
//   [37.49433330343809, 126.91711640802218],
//   [37.49433676517136, 126.91721675904665],
//   [37.49433261109141, 126.91729878510145],
//   [37.494330534051365, 126.91739128256748],
//   [37.49432568762433, 126.91748290741593],
//   [37.49433330343809, 126.9175588251475],
//   [37.49432914935773, 126.91762514412373],
//   [37.49432845701102, 126.91770018923768],
//   [37.49432707231756, 126.9177900688509],
//   [37.494323610583855, 126.91787558537611],
//   [37.4943229182371, 126.91796110190134],
//   [37.49432084119678, 126.91804661842654],
//   [37.49432153354372, 126.91810333860887],
//   [37.49432914935789, 126.91818274681086],
//   [37.49433884221117, 126.91826040977764],
//   [37.49436099729966, 126.91836337865494],
//   [37.49439561461225, 126.91848379988431],
//   [37.494335380478, 126.91851434150045],
//   [37.494291070277896, 126.91853092125379],
//   [37.49423222075454, 126.91855099145867],
//   [37.494175448229264, 126.9185736795164],
//   [37.494120060358135, 126.9185954949565],
//   [37.494076442375025, 126.91860945685032],
//   [37.49402520852772, 126.91862429134957],
//   [37.49397535934528, 126.9186469794073],
//   [37.49392758718089, 126.91866617699456],
//   [37.49387773793326, 126.91868624719946],
//   [37.493842428025424, 126.91869846385408],
//   [37.49379396342433, 126.91871417097097],
//   [37.493726805282236, 126.91874034949909],
//   [37.49365203119734, 126.91877089111523],
//   [37.493595760869646, 126.91875429096568],
//   [37.49353517083514, 126.91870282533002],
//   [37.49349792865738, 126.91866728604477],
//   [37.49344578958348, 126.91861431242103],
//   [37.49338939421764, 126.91856670321489],
//   [37.49333565897094, 126.91851507069556],
//   [37.493276071325454, 126.91846209707182],
//   [37.493224464125355, 126.9184151584034],
//   [37.493174985028006, 126.91836352588409],
//   [37.49311965352544, 126.91830921115594],
//   [37.49305740553605, 126.91826160194981],
//   [37.493012182601404, 126.91822069824885],
//   [37.49296217132841, 126.91817644180368],
//   [37.492911627986544, 126.91813017370195],
//   [37.49286268071766, 126.9180845761524],
//   [37.49282224598911, 126.91804769576143],
//   [37.49277747095127, 126.9180044206152],
//   [37.492742356546344, 126.91791188441172],
//   [37.49268017626305, 126.91789368377515],
//   [37.49258649430441, 126.91783420396115],
//   [37.49249633411297, 126.91780668345021],
//   [37.492418887646934, 126.91777463820318],
//   [37.49234111147015, 126.9177448055245],
//   [37.49230120850289, 126.917672385887],
//   [37.49226609386961, 126.91761740058436],
//   [37.49221980637914, 126.91754162818584],
//   [37.492174582941175, 126.91746518523512]
// ]

const useStyles = makeStyles({
    map: {
        position: "relative",
        width: "100%",
        height: "100%",
        textAlign: "center",
        display: "inline-block",
        // border: "solid 1px black"
    },
  });

mapboxgl.accessToken = 'pk.eyJ1IjoiYmFieWNyb2MiLCJhIjoiY2tvaW5rMWlpMDE3czJ3cWYyMXZkZmxidiJ9.8m_FmwtsgjCBUq2Jq9wVcg';

function swapColumns(array) {
  var newArray = [];
  const length = array.length;
  for(var i = 0; i < length; i++) {
    newArray.push([ array[i][1], array[i][0] ]);
  }
  return newArray;
}

export default function Map(props) {
  const classes = useStyles();
  var index = parseInt(props.index * 10);
  // console.log(`index ${index}`)
  var isRiding = props.isRiding;

  const mapContainer = useRef(null);
  const map = useRef(null);
  const [lng, setLng] = useState(fullRoute[0][1]);
  const [lat, setLat] = useState(fullRoute[0][0]);
  const [zoom, setZoom] = useState(15);
  const [route, setRoute] = useState(fullRoute.slice(0, 1));

  useEffect(() => {
    if (map.current) return; // initialize map only once
      map.current = new mapboxgl.Map({
        container: mapContainer.current,
        style: 'mapbox://styles/mapbox/streets-v11',
        center: [lng, lat],
        zoom: zoom
      });
      map.current.on('load', function () {
        map.current.addSource('route', {
          'type': 'geojson',
          'data': {
            'type': 'Feature',
            'properties': {},
            'geometry': {
              'type': 'LineString',
              'coordinates': swapColumns(route)
            }
          }
        });
        map.current.addLayer({
          'id': 'route',
          'type': 'line',
          'source': 'route',
          'layout': {
            'line-join': 'round',
            'line-cap': 'round'
          },
          'paint': {
            'line-color': '#888',
            'line-width': 4
          }
        });

        map.current.addSource('pointer', {
          type: 'geojson',
          data: {
            "type": "FeatureCollection",
            "features": [{
              "type": "Feature",
              "properties": {},
              "geometry": {
                "type": "Point",
                "coordinates": [lng, lat]
              }
            }]
          }
        });
        map.current.addLayer({
          id: 'pointer',
          type: 'circle',
          source: 'pointer',
          paint: {
            'circle-radius': 5,
            'circle-color': '#FF0000',
            'circle-opacity': 0.8
          }
        });
      });
  });

  useEffect(() => {
    if(index >= fullRoute.length) {
      index = (index - 8) % 18 + 8;
    }
    // console.log(index)
    setLng(fullRoute[index][1]);
    setLat(fullRoute[index][0]);
    setRoute(route => [...route, fullRoute[index]]);

    map.current.setCenter([lng, lat]);

    if(map.current.getSource('route')) {
      map.current.getSource('route').setData({
        "type": "Feature",
        "geometry": {
            "type": "LineString",
            "coordinates": swapColumns(route)
        }
      });
    }

    if(map.current.getSource('pointer')) {
      map.current.getSource('pointer').setData({
        "type": "FeatureCollection",
        "features": [{
          "type": "Feature",
          "properties": {},
          "geometry": {
            "type": "Point",
            "coordinates": [lng, lat]
          }
        }]
      });
    }
  }, [index]);

  useEffect(() => {
    if(isRiding) {
      return;
    }
    props.saveRoute(swapColumns(route));
    setLng(fullRoute[0][1]);
    setLat(fullRoute[0][0]);
    setRoute(fullRoute.slice(0, 1));
  }, [isRiding])

  return (
    <div ref={mapContainer} className={classes.map}>

    </div>
  )
}